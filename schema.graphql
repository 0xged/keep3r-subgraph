
type Keeper @entity {
  "Keeper's address"
  id: ID!
  "Bonds"
  bonds: [Bond!]! @derivedFrom(field: "keeper")
}

enum TYPE_OF_BOND_ACTION {
  BOND
  ACTIVATE
  UNBOND
  WITHDRAW
}

type Bond @entity {
  "keeper.id-token.id"
  id: ID!
  "Keeper"
  keeper: Keeper!
  "Token being bonded"
  token: Token!
  "bonded"
  bonded: BigInt!
  "History"
  history: [BondAction!]! @derivedFrom(field: "bond")
}

type BondAction @entity {
  "tx.hash-bond.id"
  id: ID!
  "Bond"
  bond: Bond!
  "Type of action"
  action: TYPE_OF_BOND_ACTION!
  "amount"
  amount: BigInt!
  "transaction"
  transaction: Transaction!
  "createdAtBlock"
  createdAtBlock: BigInt!
  "createdAtTimestamp"
  createdAtTimestamp: BigInt!
}

type Transaction @entity {
  "transaction.hash-transaction.index"
  id: ID!
  "The event name / call stacktrace"
  event: String!
  "The transaction sender"
  from: Bytes!
  "Transaction hash"
  hash: Bytes!
  "The transaction index"
  index: BigInt!
  "Address that received the transaction"
  to: Bytes!
  "Ether value sent in the transaction"
  value: BigInt!
  "Timestamp when the transaction was executed"
  timestamp: BigInt!
  "Block number"
  blockNumber: BigInt!
}

type Token @entity {
  "Token address"
  id: ID!
  "Name of the Token"
  name: String!
  "Symbol of the Token"
  symbol: String!
  "Decimals"
  decimals: Int!
  "Magnitude"
  magnitude: BigInt!
}

